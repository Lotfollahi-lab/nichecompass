[tool.poetry]
name = "nichecompass"
version = "0.1.0"
description = " Interpretable Niche Identification from Multi-Sample Spatial Omics Data."
authors = ["sebastianbirk <sebastian.birk@outlook.com>"]
license = "Apache2.0"
readme = "README.md"
homepage = "https://github.com/sebastianbirk/nichecompass"
repository = "https://github.com/sebastianbirk/nichecompass"
documentation = "https://github.com/sebastianbirk/nichecompass"
packages = [{ include = "nichecompass" }]
classifiers = [
    "Programming Language :: Python :: 3.9",
]

[tool.poetry.scripts]
nichecompass = "nichecompass.main:app"

[tool.poetry.dependencies]
python = "^3.9"
bokeh = {version = "2.4.3", source = "pypi"}
holoviews = {version = "1.15.4", source = "pypi"}
mlflow = {version = "1.28.0", source = "pypi"}
pyreadr = {version = "0.4.6", source = "pypi"}
selenium = {version = "4.8.2", source = "pypi"}
scanpy = {version = "1.9.3", source = "pypi"}
scib-metrics = {version = "0.3.3", source = "pypi"}
scikit-misc = {version = "0.3.0", source = "pypi"}
squidpy = {version = "1.2.2", source = "pypi"}
scglue = {version = "0.3.2", source = "pypi"}
omnipath = {version = "1.0.7", source = "pypi"}
decoupler = {version = "1.4.0", source = "pypi"}
torch-geometric = {version = "2.1.0post1", source = "pypi"}
torch = {version = "2.0.0", source = "torch"}
torch-scatter = {version = "2.1.1", source = "torch-scatter"}
torch-sparse = {version = "0.6.17", source = "torch-sparse"}
jax = {version = "0.4.7", source = "pypi"}
jaxlib = {version = "0.4.7+cuda11.cudnn82", source = "jaxlib"}
typer = "0.9.0"

[[tool.poetry.source]]
name = "torch"
url = "https://download.pytorch.org/whl/cu117"
default = false
secondary = true

[[tool.poetry.source]]
name = "torch-scatter"
url = "https://data.pyg.org/whl/torch-2.0.0+cu117.html"
default = false
secondary = true

[[tool.poetry.source]]
name = "torch-sparse"
url = "https://data.pyg.org/whl/torch-2.0.0+cu117.html"
default = false
secondary = true

[[tool.poetry.source]]
name = "jaxlib"
url = "https://storage.googleapis.com/jax-releases/jax_cuda_releases.html"
default = false
secondary = true


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
